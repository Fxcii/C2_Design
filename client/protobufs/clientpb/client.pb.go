// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.3
// source: client.proto

package clientpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                string   `protobufs:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name              string   `protobufs:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Hostname          string   `protobufs:"bytes,3,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	UUID              string   `protobufs:"bytes,4,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Username          string   `protobufs:"bytes,5,opt,name=Username,proto3" json:"Username,omitempty"`
	UID               string   `protobufs:"bytes,6,opt,name=UID,proto3" json:"UID,omitempty"`
	GID               string   `protobufs:"bytes,7,opt,name=GID,proto3" json:"GID,omitempty"`
	OS                string   `protobufs:"bytes,8,opt,name=OS,proto3" json:"OS,omitempty"`
	Arch              string   `protobufs:"bytes,9,opt,name=Arch,proto3" json:"Arch,omitempty"`
	Transport         string   `protobufs:"bytes,10,opt,name=Transport,proto3" json:"Transport,omitempty"`
	RemoteAddress     string   `protobufs:"bytes,11,opt,name=RemoteAddress,proto3" json:"RemoteAddress,omitempty"`
	PID               int32    `protobufs:"varint,12,opt,name=PID,proto3" json:"PID,omitempty"`
	Filename          string   `protobufs:"bytes,13,opt,name=Filename,proto3" json:"Filename,omitempty"` // Argv[0]
	LastCheckin       int64    `protobufs:"varint,14,opt,name=LastCheckin,proto3" json:"LastCheckin,omitempty"`
	ActiveC2          string   `protobufs:"bytes,15,opt,name=ActiveC2,proto3" json:"ActiveC2,omitempty"`
	Version           string   `protobufs:"bytes,16,opt,name=Version,proto3" json:"Version,omitempty"`
	Evasion           bool     `protobufs:"varint,17,opt,name=Evasion,proto3" json:"Evasion,omitempty"`
	IsDead            bool     `protobufs:"varint,18,opt,name=IsDead,proto3" json:"IsDead,omitempty"`
	ReconnectInterval int64    `protobufs:"varint,19,opt,name=ReconnectInterval,proto3" json:"ReconnectInterval,omitempty"`
	ProxyURL          string   `protobufs:"bytes,20,opt,name=ProxyURL,proto3" json:"ProxyURL,omitempty"`
	Burned            bool     `protobufs:"varint,22,opt,name=Burned,proto3" json:"Burned,omitempty"`
	Extensions        []string `protobufs:"bytes,23,rep,name=Extensions,proto3" json:"Extensions,omitempty"`
	// string ConfigID = 24;
	PeerID       int64  `protobufs:"varint,25,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
	Locale       string `protobufs:"bytes,26,opt,name=Locale,proto3" json:"Locale,omitempty"`
	FirstContact int64  `protobufs:"varint,27,opt,name=FirstContact,proto3" json:"FirstContact,omitempty"`
	Integrity    string `protobufs:"bytes,28,opt,name=Integrity,proto3" json:"Integrity,omitempty"`
}

func (x *Session) Reset() {
	*x = Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{0}
}

func (x *Session) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Session) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Session) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Session) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *Session) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Session) GetUID() string {
	if x != nil {
		return x.UID
	}
	return ""
}

func (x *Session) GetGID() string {
	if x != nil {
		return x.GID
	}
	return ""
}

func (x *Session) GetOS() string {
	if x != nil {
		return x.OS
	}
	return ""
}

func (x *Session) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *Session) GetTransport() string {
	if x != nil {
		return x.Transport
	}
	return ""
}

func (x *Session) GetRemoteAddress() string {
	if x != nil {
		return x.RemoteAddress
	}
	return ""
}

func (x *Session) GetPID() int32 {
	if x != nil {
		return x.PID
	}
	return 0
}

func (x *Session) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Session) GetLastCheckin() int64 {
	if x != nil {
		return x.LastCheckin
	}
	return 0
}

func (x *Session) GetActiveC2() string {
	if x != nil {
		return x.ActiveC2
	}
	return ""
}

func (x *Session) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Session) GetEvasion() bool {
	if x != nil {
		return x.Evasion
	}
	return false
}

func (x *Session) GetIsDead() bool {
	if x != nil {
		return x.IsDead
	}
	return false
}

func (x *Session) GetReconnectInterval() int64 {
	if x != nil {
		return x.ReconnectInterval
	}
	return 0
}

func (x *Session) GetProxyURL() string {
	if x != nil {
		return x.ProxyURL
	}
	return ""
}

func (x *Session) GetBurned() bool {
	if x != nil {
		return x.Burned
	}
	return false
}

func (x *Session) GetExtensions() []string {
	if x != nil {
		return x.Extensions
	}
	return nil
}

func (x *Session) GetPeerID() int64 {
	if x != nil {
		return x.PeerID
	}
	return 0
}

func (x *Session) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *Session) GetFirstContact() int64 {
	if x != nil {
		return x.FirstContact
	}
	return 0
}

func (x *Session) GetIntegrity() string {
	if x != nil {
		return x.Integrity
	}
	return ""
}

type Beacon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                  string `protobufs:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                string `protobufs:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Hostname            string `protobufs:"bytes,3,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	UUID                string `protobufs:"bytes,4,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Username            string `protobufs:"bytes,5,opt,name=Username,proto3" json:"Username,omitempty"`
	UID                 string `protobufs:"bytes,6,opt,name=UID,proto3" json:"UID,omitempty"`
	GID                 string `protobufs:"bytes,7,opt,name=GID,proto3" json:"GID,omitempty"`
	OS                  string `protobufs:"bytes,8,opt,name=OS,proto3" json:"OS,omitempty"`
	Arch                string `protobufs:"bytes,9,opt,name=Arch,proto3" json:"Arch,omitempty"`
	Transport           string `protobufs:"bytes,10,opt,name=Transport,proto3" json:"Transport,omitempty"`
	RemoteAddress       string `protobufs:"bytes,11,opt,name=RemoteAddress,proto3" json:"RemoteAddress,omitempty"`
	PID                 int32  `protobufs:"varint,12,opt,name=PID,proto3" json:"PID,omitempty"`
	Filename            string `protobufs:"bytes,13,opt,name=Filename,proto3" json:"Filename,omitempty"` // Argv[0]
	LastCheckin         int64  `protobufs:"varint,14,opt,name=LastCheckin,proto3" json:"LastCheckin,omitempty"`
	ActiveC2            string `protobufs:"bytes,15,opt,name=ActiveC2,proto3" json:"ActiveC2,omitempty"`
	Version             string `protobufs:"bytes,16,opt,name=Version,proto3" json:"Version,omitempty"`
	Evasion             bool   `protobufs:"varint,17,opt,name=Evasion,proto3" json:"Evasion,omitempty"`
	IsDead              bool   `protobufs:"varint,18,opt,name=IsDead,proto3" json:"IsDead,omitempty"`
	ProxyURL            string `protobufs:"bytes,20,opt,name=ProxyURL,proto3" json:"ProxyURL,omitempty"`
	ReconnectInterval   int64  `protobufs:"varint,21,opt,name=ReconnectInterval,proto3" json:"ReconnectInterval,omitempty"`
	Interval            int64  `protobufs:"varint,22,opt,name=Interval,proto3" json:"Interval,omitempty"`
	Jitter              int64  `protobufs:"varint,23,opt,name=Jitter,proto3" json:"Jitter,omitempty"`
	Burned              bool   `protobufs:"varint,24,opt,name=Burned,proto3" json:"Burned,omitempty"`
	NextCheckin         int64  `protobufs:"varint,25,opt,name=NextCheckin,proto3" json:"NextCheckin,omitempty"`
	TasksCount          int64  `protobufs:"varint,26,opt,name=TasksCount,proto3" json:"TasksCount,omitempty"`
	TasksCountCompleted int64  `protobufs:"varint,27,opt,name=TasksCountCompleted,proto3" json:"TasksCountCompleted,omitempty"`
	Locale              string `protobufs:"bytes,28,opt,name=Locale,proto3" json:"Locale,omitempty"`
	FirstContact        int64  `protobufs:"varint,29,opt,name=FirstContact,proto3" json:"FirstContact,omitempty"`
	Integrity           string `protobufs:"bytes,30,opt,name=Integrity,proto3" json:"Integrity,omitempty"`
}

func (x *Beacon) Reset() {
	*x = Beacon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Beacon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Beacon) ProtoMessage() {}

func (x *Beacon) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Beacon.ProtoReflect.Descriptor instead.
func (*Beacon) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{1}
}

func (x *Beacon) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Beacon) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Beacon) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Beacon) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *Beacon) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Beacon) GetUID() string {
	if x != nil {
		return x.UID
	}
	return ""
}

func (x *Beacon) GetGID() string {
	if x != nil {
		return x.GID
	}
	return ""
}

func (x *Beacon) GetOS() string {
	if x != nil {
		return x.OS
	}
	return ""
}

func (x *Beacon) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *Beacon) GetTransport() string {
	if x != nil {
		return x.Transport
	}
	return ""
}

func (x *Beacon) GetRemoteAddress() string {
	if x != nil {
		return x.RemoteAddress
	}
	return ""
}

func (x *Beacon) GetPID() int32 {
	if x != nil {
		return x.PID
	}
	return 0
}

func (x *Beacon) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Beacon) GetLastCheckin() int64 {
	if x != nil {
		return x.LastCheckin
	}
	return 0
}

func (x *Beacon) GetActiveC2() string {
	if x != nil {
		return x.ActiveC2
	}
	return ""
}

func (x *Beacon) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Beacon) GetEvasion() bool {
	if x != nil {
		return x.Evasion
	}
	return false
}

func (x *Beacon) GetIsDead() bool {
	if x != nil {
		return x.IsDead
	}
	return false
}

func (x *Beacon) GetProxyURL() string {
	if x != nil {
		return x.ProxyURL
	}
	return ""
}

func (x *Beacon) GetReconnectInterval() int64 {
	if x != nil {
		return x.ReconnectInterval
	}
	return 0
}

func (x *Beacon) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *Beacon) GetJitter() int64 {
	if x != nil {
		return x.Jitter
	}
	return 0
}

func (x *Beacon) GetBurned() bool {
	if x != nil {
		return x.Burned
	}
	return false
}

func (x *Beacon) GetNextCheckin() int64 {
	if x != nil {
		return x.NextCheckin
	}
	return 0
}

func (x *Beacon) GetTasksCount() int64 {
	if x != nil {
		return x.TasksCount
	}
	return 0
}

func (x *Beacon) GetTasksCountCompleted() int64 {
	if x != nil {
		return x.TasksCountCompleted
	}
	return 0
}

func (x *Beacon) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *Beacon) GetFirstContact() int64 {
	if x != nil {
		return x.FirstContact
	}
	return 0
}

func (x *Beacon) GetIntegrity() string {
	if x != nil {
		return x.Integrity
	}
	return ""
}

type Beacons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Beacons []*Beacon `protobufs:"bytes,2,rep,name=Beacons,proto3" json:"Beacons,omitempty"`
}

func (x *Beacons) Reset() {
	*x = Beacons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Beacons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Beacons) ProtoMessage() {}

func (x *Beacons) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Beacons.ProtoReflect.Descriptor instead.
func (*Beacons) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{2}
}

func (x *Beacons) GetBeacons() []*Beacon {
	if x != nil {
		return x.Beacons
	}
	return nil
}

type BeaconTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string `protobufs:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	BeaconID    string `protobufs:"bytes,2,opt,name=BeaconID,proto3" json:"BeaconID,omitempty"`
	CreatedAt   int64  `protobufs:"varint,3,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	State       string `protobufs:"bytes,4,opt,name=State,proto3" json:"State,omitempty"`
	SentAt      int64  `protobufs:"varint,5,opt,name=SentAt,proto3" json:"SentAt,omitempty"`
	CompletedAt int64  `protobufs:"varint,6,opt,name=CompletedAt,proto3" json:"CompletedAt,omitempty"`
	Request     []byte `protobufs:"bytes,7,opt,name=Request,proto3" json:"Request,omitempty"`
	Response    []byte `protobufs:"bytes,8,opt,name=Response,proto3" json:"Response,omitempty"`
	Description string `protobufs:"bytes,9,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *BeaconTask) Reset() {
	*x = BeaconTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeaconTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconTask) ProtoMessage() {}

func (x *BeaconTask) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeaconTask.ProtoReflect.Descriptor instead.
func (*BeaconTask) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{3}
}

func (x *BeaconTask) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *BeaconTask) GetBeaconID() string {
	if x != nil {
		return x.BeaconID
	}
	return ""
}

func (x *BeaconTask) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *BeaconTask) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *BeaconTask) GetSentAt() int64 {
	if x != nil {
		return x.SentAt
	}
	return 0
}

func (x *BeaconTask) GetCompletedAt() int64 {
	if x != nil {
		return x.CompletedAt
	}
	return 0
}

func (x *BeaconTask) GetRequest() []byte {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *BeaconTask) GetResponse() []byte {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *BeaconTask) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type BeaconTasks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeaconID string        `protobufs:"bytes,1,opt,name=BeaconID,proto3" json:"BeaconID,omitempty"`
	Tasks    []*BeaconTask `protobufs:"bytes,2,rep,name=Tasks,proto3" json:"Tasks,omitempty"`
}

func (x *BeaconTasks) Reset() {
	*x = BeaconTasks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeaconTasks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconTasks) ProtoMessage() {}

func (x *BeaconTasks) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeaconTasks.ProtoReflect.Descriptor instead.
func (*BeaconTasks) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{4}
}

func (x *BeaconTasks) GetBeaconID() string {
	if x != nil {
		return x.BeaconID
	}
	return ""
}

func (x *BeaconTasks) GetTasks() []*BeaconTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type BeaconIntegrity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeaconID  string `protobufs:"bytes,1,opt,name=BeaconID,proto3" json:"BeaconID,omitempty"`
	Integrity string `protobufs:"bytes,2,opt,name=Integrity,proto3" json:"Integrity,omitempty"`
}

func (x *BeaconIntegrity) Reset() {
	*x = BeaconIntegrity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeaconIntegrity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconIntegrity) ProtoMessage() {}

func (x *BeaconIntegrity) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeaconIntegrity.ProtoReflect.Descriptor instead.
func (*BeaconIntegrity) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{5}
}

func (x *BeaconIntegrity) GetBeaconID() string {
	if x != nil {
		return x.BeaconID
	}
	return ""
}

func (x *BeaconIntegrity) GetIntegrity() string {
	if x != nil {
		return x.Integrity
	}
	return ""
}

var File_client_proto protoreflect.FileDescriptor

var file_client_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x22, 0xb1, 0x05, 0x0a, 0x07, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x6f, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x47, 0x49, 0x44, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x47, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x53, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x4f, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x72, 0x63, 0x68,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x72, 0x63, 0x68, 0x12, 0x1c, 0x0a, 0x09,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x50, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x50,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x32, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x32, 0x12, 0x18, 0x0a, 0x07,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x76, 0x61, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x76, 0x61, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x44, 0x65, 0x61, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x49, 0x73, 0x44, 0x65, 0x61, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x55,
	0x52, 0x4c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x55,
	0x52, 0x4c, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x42, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x65,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x50, 0x65, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x69,
	0x72, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x69, 0x74, 0x79, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x69, 0x74, 0x79, 0x22, 0xa0, 0x06, 0x0a,
	0x06, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x48,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x47, 0x49, 0x44,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x47, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x4f,
	0x53, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x4f, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x41,
	0x72, 0x63, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x72, 0x63, 0x68, 0x12,
	0x1c, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x50, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x32, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x32, 0x12,
	0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x76, 0x61,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x76, 0x61, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x44, 0x65, 0x61, 0x64, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x44, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x55, 0x52, 0x4c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x55, 0x52, 0x4c, 0x12, 0x2c, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x11, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x4a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x4a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x75, 0x72,
	0x6e, 0x65, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x42, 0x75, 0x72, 0x6e, 0x65,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x13, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x69, 0x74, 0x79, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x69, 0x74, 0x79, 0x22,
	0x35, 0x0a, 0x07, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x42, 0x65,
	0x61, 0x63, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x52, 0x07, 0x42,
	0x65, 0x61, 0x63, 0x6f, 0x6e, 0x73, 0x22, 0xfe, 0x01, 0x0a, 0x0a, 0x42, 0x65, 0x61, 0x63, 0x6f,
	0x6e, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x55, 0x0a, 0x0b, 0x42, 0x65, 0x61, 0x63, 0x6f,
	0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x2a, 0x0a, 0x05, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x65, 0x61,
	0x63, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x4b,
	0x0a, 0x0f, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x69, 0x74, 0x79, 0x42, 0x0c, 0x5a, 0x0a, 0x2e,
	0x3b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_client_proto_rawDescOnce sync.Once
	file_client_proto_rawDescData = file_client_proto_rawDesc
)

func file_client_proto_rawDescGZIP() []byte {
	file_client_proto_rawDescOnce.Do(func() {
		file_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_client_proto_rawDescData)
	})
	return file_client_proto_rawDescData
}

var file_client_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_client_proto_goTypes = []interface{}{
	(*Session)(nil),         // 0: clientpb.Session
	(*Beacon)(nil),          // 1: clientpb.Beacon
	(*Beacons)(nil),         // 2: clientpb.Beacons
	(*BeaconTask)(nil),      // 3: clientpb.BeaconTask
	(*BeaconTasks)(nil),     // 4: clientpb.BeaconTasks
	(*BeaconIntegrity)(nil), // 5: clientpb.BeaconIntegrity
}
var file_client_proto_depIdxs = []int32{
	1, // 0: clientpb.Beacons.Beacons:type_name -> clientpb.Beacon
	3, // 1: clientpb.BeaconTasks.Tasks:type_name -> clientpb.BeaconTask
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_client_proto_init() }
func file_client_proto_init() {
	if File_client_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_client_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Beacon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Beacons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeaconTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeaconTasks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeaconIntegrity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_client_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_client_proto_goTypes,
		DependencyIndexes: file_client_proto_depIdxs,
		MessageInfos:      file_client_proto_msgTypes,
	}.Build()
	File_client_proto = out.File
	file_client_proto_rawDesc = nil
	file_client_proto_goTypes = nil
	file_client_proto_depIdxs = nil
}
